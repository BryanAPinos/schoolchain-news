{"id":"../node_modules/datastore-pubsub/src/utils.js","dependencies":[{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\package.json","includedInParent":true,"mtime":1593887166831},{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\datastore-pubsub\\package.json","includedInParent":true,"mtime":1593975633000},{"name":"multibase","loc":{"line":3,"column":26},"parent":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\datastore-pubsub\\src\\utils.js","resolved":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\multibase\\src\\index.js"},{"name":"err-code","loc":{"line":4,"column":24},"parent":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\datastore-pubsub\\src\\utils.js","resolved":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\err-code\\index.js"}],"generated":{"js":"'use strict'\n\nconst multibase = require('multibase')\nconst errcode = require('err-code')\n\nconst namespace = '/record/'\nconst base64urlCode = 'u' // base64url code from multibase\n\nmodule.exports.encodeBase32 = (buf) => {\n  return multibase.encode('base32', buf).slice(1) // slice off multibase codec\n}\n\n// converts a binary record key to a pubsub topic key.\nmodule.exports.keyToTopic = (key) => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  const b64url = multibase.encode('base64url', key).slice(1).toString()\n\n  return `${namespace}${b64url}`\n}\n\n// converts a pubsub topic key to a binary record key.\nmodule.exports.topicToKey = (topic) => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = `${base64urlCode}${topic.substring(namespace.length)}`\n\n  return multibase.decode(key)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/datastore-pubsub/src/utils.js":"'use strict'\n\nconst multibase = require('multibase')\nconst errcode = require('err-code')\n\nconst namespace = '/record/'\nconst base64urlCode = 'u' // base64url code from multibase\n\nmodule.exports.encodeBase32 = (buf) => {\n  return multibase.encode('base32', buf).slice(1) // slice off multibase codec\n}\n\n// converts a binary record key to a pubsub topic key.\nmodule.exports.keyToTopic = (key) => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  const b64url = multibase.encode('base64url', key).slice(1).toString()\n\n  return `${namespace}${b64url}`\n}\n\n// converts a pubsub topic key to a binary record key.\nmodule.exports.topicToKey = (topic) => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = `${base64urlCode}${topic.substring(namespace.length)}`\n\n  return multibase.decode(key)\n}\n"},"lineCount":32}},"error":null,"hash":"ea6bde2ca4b26daa2c091766bf2bbca2","cacheData":{"env":{}}}