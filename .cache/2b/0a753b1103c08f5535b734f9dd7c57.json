{"id":"../node_modules/libp2p-noise/lib/index.js","dependencies":[{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\lib\\index.js.map","includedInParent":true,"mtime":1593975640158},{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\package.json","includedInParent":true,"mtime":1593887166831},{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\package.json","includedInParent":true,"mtime":1593975640158},{"name":"./noise","loc":{"line":2,"column":14},"parent":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\lib\\index.js","resolved":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\lib\\noise.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  NOISE: true\n};\nexports.NOISE = void 0;\n\nvar _noise = require(\"./noise\");\n\nObject.keys(_noise).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _noise[key];\n    }\n  });\n});\n\n/**\n * Default configuration, it will generate new noise static key and enable noise pipes (IK handshake).\n */\nconst NOISE = new _noise.Noise();\nexports.NOISE = NOISE;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":14,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":15,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":17,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":18,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":19,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":21,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":22,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":24,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":27,"column":0}},{"source":"../src/index.ts","name":"NOISE","original":{"line":7,"column":13},"generated":{"line":27,"column":6}},{"source":"../src/index.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":27,"column":11}},{"source":"../src/index.ts","name":null,"original":{"line":7,"column":21},"generated":{"line":27,"column":14}},{"source":"../src/index.ts","name":"Noise","original":{"line":7,"column":25},"generated":{"line":27,"column":18}},{"source":"../src/index.ts","name":null,"original":{"line":7,"column":21},"generated":{"line":27,"column":30}},{"source":"../src/index.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":27,"column":32}}],"sources":{"../src/index.ts":"import {Noise} from \"./noise\";\nexport * from \"./noise\";\n\n/**\n * Default configuration, it will generate new noise static key and enable noise pipes (IK handshake).\n */\nexport const NOISE = new Noise();\n"},"lineCount":null}},"error":null,"hash":"cee2fd9bf3f3f7bfacd4e980486cf858","cacheData":{"env":{}}}