{"id":"../node_modules/libp2p-noise/lib/proto/payload.js","dependencies":[{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\package.json","includedInParent":true,"mtime":1593887166831},{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\package.json","includedInParent":true,"mtime":1593975640158},{"name":"protobufjs/minimal","loc":{"line":8,"column":41},"parent":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\libp2p-noise\\lib\\proto\\payload.js","resolved":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\protobufjs\\minimal.js"}],"generated":{"js":"var define;\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n\n})(this, function($protobuf) {\n    \"use strict\";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n    \n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n    \n    $root.pb = (function() {\n    \n        /**\n         * Namespace pb.\n         * @exports pb\n         * @namespace\n         */\n        var pb = {};\n    \n        pb.NoiseHandshakePayload = (function() {\n    \n            /**\n             * Properties of a NoiseHandshakePayload.\n             * @memberof pb\n             * @interface INoiseHandshakePayload\n             * @property {Uint8Array|null} [identityKey] NoiseHandshakePayload identityKey\n             * @property {Uint8Array|null} [identitySig] NoiseHandshakePayload identitySig\n             * @property {Uint8Array|null} [data] NoiseHandshakePayload data\n             */\n    \n            /**\n             * Constructs a new NoiseHandshakePayload.\n             * @memberof pb\n             * @classdesc Represents a NoiseHandshakePayload.\n             * @implements INoiseHandshakePayload\n             * @constructor\n             * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n             */\n            function NoiseHandshakePayload(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * NoiseHandshakePayload identityKey.\n             * @member {Uint8Array} identityKey\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.identityKey = $util.newBuffer([]);\n    \n            /**\n             * NoiseHandshakePayload identitySig.\n             * @member {Uint8Array} identitySig\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.identitySig = $util.newBuffer([]);\n    \n            /**\n             * NoiseHandshakePayload data.\n             * @member {Uint8Array} data\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.data = $util.newBuffer([]);\n    \n            /**\n             * Creates a new NoiseHandshakePayload instance using the specified properties.\n             * @function create\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload instance\n             */\n            NoiseHandshakePayload.create = function create(properties) {\n                return new NoiseHandshakePayload(properties);\n            };\n    \n            /**\n             * Encodes the specified NoiseHandshakePayload message. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n             * @function encode\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            NoiseHandshakePayload.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.identityKey);\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.identitySig);\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.data);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified NoiseHandshakePayload message, length delimited. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            NoiseHandshakePayload.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a NoiseHandshakePayload message from the specified reader or buffer.\n             * @function decode\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            NoiseHandshakePayload.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.pb.NoiseHandshakePayload();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.identityKey = reader.bytes();\n                        break;\n                    case 2:\n                        message.identitySig = reader.bytes();\n                        break;\n                    case 3:\n                        message.data = reader.bytes();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a NoiseHandshakePayload message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            NoiseHandshakePayload.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a NoiseHandshakePayload message.\n             * @function verify\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            NoiseHandshakePayload.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    if (!(message.identityKey && typeof message.identityKey.length === \"number\" || $util.isString(message.identityKey)))\n                        return \"identityKey: buffer expected\";\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    if (!(message.identitySig && typeof message.identitySig.length === \"number\" || $util.isString(message.identitySig)))\n                        return \"identitySig: buffer expected\";\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                        return \"data: buffer expected\";\n                return null;\n            };\n    \n            /**\n             * Creates a NoiseHandshakePayload message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             */\n            NoiseHandshakePayload.fromObject = function fromObject(object) {\n                if (object instanceof $root.pb.NoiseHandshakePayload)\n                    return object;\n                var message = new $root.pb.NoiseHandshakePayload();\n                if (object.identityKey != null)\n                    if (typeof object.identityKey === \"string\")\n                        $util.base64.decode(object.identityKey, message.identityKey = $util.newBuffer($util.base64.length(object.identityKey)), 0);\n                    else if (object.identityKey.length)\n                        message.identityKey = object.identityKey;\n                if (object.identitySig != null)\n                    if (typeof object.identitySig === \"string\")\n                        $util.base64.decode(object.identitySig, message.identitySig = $util.newBuffer($util.base64.length(object.identitySig)), 0);\n                    else if (object.identitySig.length)\n                        message.identitySig = object.identitySig;\n                if (object.data != null)\n                    if (typeof object.data === \"string\")\n                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n                    else if (object.data.length)\n                        message.data = object.data;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a NoiseHandshakePayload message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.NoiseHandshakePayload} message NoiseHandshakePayload\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            NoiseHandshakePayload.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if (options.bytes === String)\n                        object.identityKey = \"\";\n                    else {\n                        object.identityKey = [];\n                        if (options.bytes !== Array)\n                            object.identityKey = $util.newBuffer(object.identityKey);\n                    }\n                    if (options.bytes === String)\n                        object.identitySig = \"\";\n                    else {\n                        object.identitySig = [];\n                        if (options.bytes !== Array)\n                            object.identitySig = $util.newBuffer(object.identitySig);\n                    }\n                    if (options.bytes === String)\n                        object.data = \"\";\n                    else {\n                        object.data = [];\n                        if (options.bytes !== Array)\n                            object.data = $util.newBuffer(object.data);\n                    }\n                }\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    object.identityKey = options.bytes === String ? $util.base64.encode(message.identityKey, 0, message.identityKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.identityKey) : message.identityKey;\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    object.identitySig = options.bytes === String ? $util.base64.encode(message.identitySig, 0, message.identitySig.length) : options.bytes === Array ? Array.prototype.slice.call(message.identitySig) : message.identitySig;\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n                return object;\n            };\n    \n            /**\n             * Converts this NoiseHandshakePayload to JSON.\n             * @function toJSON\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            NoiseHandshakePayload.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return NoiseHandshakePayload;\n        })();\n    \n        return pb;\n    })();\n\n    return $root;\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/libp2p-noise/lib/proto/payload.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}}],"sources":{"../node_modules/libp2p-noise/lib/proto/payload.js":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n\n})(this, function($protobuf) {\n    \"use strict\";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n    \n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n    \n    $root.pb = (function() {\n    \n        /**\n         * Namespace pb.\n         * @exports pb\n         * @namespace\n         */\n        var pb = {};\n    \n        pb.NoiseHandshakePayload = (function() {\n    \n            /**\n             * Properties of a NoiseHandshakePayload.\n             * @memberof pb\n             * @interface INoiseHandshakePayload\n             * @property {Uint8Array|null} [identityKey] NoiseHandshakePayload identityKey\n             * @property {Uint8Array|null} [identitySig] NoiseHandshakePayload identitySig\n             * @property {Uint8Array|null} [data] NoiseHandshakePayload data\n             */\n    \n            /**\n             * Constructs a new NoiseHandshakePayload.\n             * @memberof pb\n             * @classdesc Represents a NoiseHandshakePayload.\n             * @implements INoiseHandshakePayload\n             * @constructor\n             * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n             */\n            function NoiseHandshakePayload(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * NoiseHandshakePayload identityKey.\n             * @member {Uint8Array} identityKey\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.identityKey = $util.newBuffer([]);\n    \n            /**\n             * NoiseHandshakePayload identitySig.\n             * @member {Uint8Array} identitySig\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.identitySig = $util.newBuffer([]);\n    \n            /**\n             * NoiseHandshakePayload data.\n             * @member {Uint8Array} data\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             */\n            NoiseHandshakePayload.prototype.data = $util.newBuffer([]);\n    \n            /**\n             * Creates a new NoiseHandshakePayload instance using the specified properties.\n             * @function create\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload=} [properties] Properties to set\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload instance\n             */\n            NoiseHandshakePayload.create = function create(properties) {\n                return new NoiseHandshakePayload(properties);\n            };\n    \n            /**\n             * Encodes the specified NoiseHandshakePayload message. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n             * @function encode\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            NoiseHandshakePayload.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.identityKey);\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.identitySig);\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.data);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified NoiseHandshakePayload message, length delimited. Does not implicitly {@link pb.NoiseHandshakePayload.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.INoiseHandshakePayload} message NoiseHandshakePayload message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            NoiseHandshakePayload.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a NoiseHandshakePayload message from the specified reader or buffer.\n             * @function decode\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            NoiseHandshakePayload.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.pb.NoiseHandshakePayload();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.identityKey = reader.bytes();\n                        break;\n                    case 2:\n                        message.identitySig = reader.bytes();\n                        break;\n                    case 3:\n                        message.data = reader.bytes();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a NoiseHandshakePayload message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            NoiseHandshakePayload.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a NoiseHandshakePayload message.\n             * @function verify\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            NoiseHandshakePayload.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    if (!(message.identityKey && typeof message.identityKey.length === \"number\" || $util.isString(message.identityKey)))\n                        return \"identityKey: buffer expected\";\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    if (!(message.identitySig && typeof message.identitySig.length === \"number\" || $util.isString(message.identitySig)))\n                        return \"identitySig: buffer expected\";\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                        return \"data: buffer expected\";\n                return null;\n            };\n    \n            /**\n             * Creates a NoiseHandshakePayload message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {pb.NoiseHandshakePayload} NoiseHandshakePayload\n             */\n            NoiseHandshakePayload.fromObject = function fromObject(object) {\n                if (object instanceof $root.pb.NoiseHandshakePayload)\n                    return object;\n                var message = new $root.pb.NoiseHandshakePayload();\n                if (object.identityKey != null)\n                    if (typeof object.identityKey === \"string\")\n                        $util.base64.decode(object.identityKey, message.identityKey = $util.newBuffer($util.base64.length(object.identityKey)), 0);\n                    else if (object.identityKey.length)\n                        message.identityKey = object.identityKey;\n                if (object.identitySig != null)\n                    if (typeof object.identitySig === \"string\")\n                        $util.base64.decode(object.identitySig, message.identitySig = $util.newBuffer($util.base64.length(object.identitySig)), 0);\n                    else if (object.identitySig.length)\n                        message.identitySig = object.identitySig;\n                if (object.data != null)\n                    if (typeof object.data === \"string\")\n                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n                    else if (object.data.length)\n                        message.data = object.data;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a NoiseHandshakePayload message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof pb.NoiseHandshakePayload\n             * @static\n             * @param {pb.NoiseHandshakePayload} message NoiseHandshakePayload\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            NoiseHandshakePayload.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if (options.bytes === String)\n                        object.identityKey = \"\";\n                    else {\n                        object.identityKey = [];\n                        if (options.bytes !== Array)\n                            object.identityKey = $util.newBuffer(object.identityKey);\n                    }\n                    if (options.bytes === String)\n                        object.identitySig = \"\";\n                    else {\n                        object.identitySig = [];\n                        if (options.bytes !== Array)\n                            object.identitySig = $util.newBuffer(object.identitySig);\n                    }\n                    if (options.bytes === String)\n                        object.data = \"\";\n                    else {\n                        object.data = [];\n                        if (options.bytes !== Array)\n                            object.data = $util.newBuffer(object.data);\n                    }\n                }\n                if (message.identityKey != null && message.hasOwnProperty(\"identityKey\"))\n                    object.identityKey = options.bytes === String ? $util.base64.encode(message.identityKey, 0, message.identityKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.identityKey) : message.identityKey;\n                if (message.identitySig != null && message.hasOwnProperty(\"identitySig\"))\n                    object.identitySig = options.bytes === String ? $util.base64.encode(message.identitySig, 0, message.identitySig.length) : options.bytes === Array ? Array.prototype.slice.call(message.identitySig) : message.identitySig;\n                if (message.data != null && message.hasOwnProperty(\"data\"))\n                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n                return object;\n            };\n    \n            /**\n             * Converts this NoiseHandshakePayload to JSON.\n             * @function toJSON\n             * @memberof pb.NoiseHandshakePayload\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            NoiseHandshakePayload.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return NoiseHandshakePayload;\n        })();\n    \n        return pb;\n    })();\n\n    return $root;\n});\n"},"lineCount":293}},"error":null,"hash":"b48a8e08cd5e00bc23c75645622fdb78","cacheData":{"env":{}}}