{"id":"../node_modules/ipfs/src/utils/cid.js","dependencies":[{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\package.json","includedInParent":true,"mtime":1593887166831},{"name":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\ipfs\\package.json","includedInParent":true,"mtime":1593975652850},{"name":"cids","loc":{"line":3,"column":20},"parent":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\ipfs\\src\\utils\\cid.js","resolved":"C:\\Users\\Bryan Pinos\\Desktop\\Test Code\\Privacy Hackathon\\near-test\\node_modules\\cids\\src\\index.js"}],"generated":{"js":"'use strict';\n\nconst CID = require('cids');\n/**\n* Stringify a CID encoded in the requested base, upgrading to v1 if necessary.\n*\n* Setting upgrade to false will disable automatic CID upgrading from v0 to v1\n* which is necessary if the multibase is something other than base58btc. Note\n* that it will also not apply the encoding (since v0 CIDs can only be encoded\n* as base58btc).\n*\n* @param {CID|Buffer|String} cid The CID to encode\n* @param {Object} [options] Optional options\n* @param {String} [options.base] Name of multibase codec to encode the CID with\n* @param {Boolean} [options.upgrade] Automatically upgrade v0 CIDs to v1 when\n* necessary. Default: true.\n* @returns {String}\n*/\n\n\nexports.cidToString = (cid, options) => {\n  options = options || {};\n  options.upgrade = options.upgrade !== false;\n\n  if (!CID.isCID(cid)) {\n    cid = new CID(cid);\n  }\n\n  if (cid.version === 0 && options.base && options.base !== 'base58btc') {\n    if (!options.upgrade) return cid.toString();\n    cid = cid.toV1();\n  }\n\n  return cid.toBaseEncodedString(options.base);\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":0}},{"name":"CID","generated":{"line":3,"column":6},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":9}},{"name":"require","generated":{"line":3,"column":12},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":12}},{"generated":{"line":3,"column":19},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":19}},{"generated":{"line":3,"column":20},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":26},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":19}},{"generated":{"line":3,"column":27},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":5,"column":0}},{"name":"exports","generated":{"line":21,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":7},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":7}},{"name":"cidToString","generated":{"line":21,"column":8},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":8}},{"generated":{"line":21,"column":19},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":22},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":22}},{"name":"cid","generated":{"line":21,"column":23},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":23}},{"generated":{"line":21,"column":26},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":22}},{"name":"options","generated":{"line":21,"column":28},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":28}},{"generated":{"line":21,"column":35},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":22}},{"generated":{"line":21,"column":40},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":40}},{"name":"options","generated":{"line":22,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":2}},{"name":"options","generated":{"line":22,"column":2},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":2}},{"generated":{"line":22,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":9}},{"name":"options","generated":{"line":22,"column":12},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":12}},{"generated":{"line":22,"column":19},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":19}},{"generated":{"line":22,"column":23},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":23}},{"generated":{"line":22,"column":25},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":21,"column":2}},{"name":"options","generated":{"line":23,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":2}},{"name":"options","generated":{"line":23,"column":2},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":2}},{"generated":{"line":23,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":9}},{"name":"upgrade","generated":{"line":23,"column":10},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":10}},{"generated":{"line":23,"column":17},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":2}},{"name":"options","generated":{"line":23,"column":20},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":20}},{"generated":{"line":23,"column":27},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":27}},{"name":"upgrade","generated":{"line":23,"column":28},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":28}},{"generated":{"line":23,"column":35},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":20}},{"generated":{"line":23,"column":40},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":40}},{"generated":{"line":23,"column":45},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":22,"column":2}},{"generated":{"line":25,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":2}},{"generated":{"line":25,"column":6},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":6}},{"name":"CID","generated":{"line":25,"column":7},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":7}},{"generated":{"line":25,"column":10},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":10}},{"name":"isCID","generated":{"line":25,"column":11},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":11}},{"generated":{"line":25,"column":16},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":7}},{"name":"cid","generated":{"line":25,"column":17},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":17}},{"generated":{"line":25,"column":20},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":7}},{"generated":{"line":25,"column":21},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":2}},{"generated":{"line":25,"column":23},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":24,"column":23}},{"name":"cid","generated":{"line":26,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":4}},{"name":"cid","generated":{"line":26,"column":4},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":4}},{"generated":{"line":26,"column":7},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":7}},{"generated":{"line":26,"column":10},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":10}},{"name":"CID","generated":{"line":26,"column":14},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":14}},{"generated":{"line":26,"column":17},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":10}},{"name":"cid","generated":{"line":26,"column":18},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":18}},{"generated":{"line":26,"column":21},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":10}},{"generated":{"line":26,"column":22},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":25,"column":4}},{"generated":{"line":27,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":26,"column":3}},{"generated":{"line":29,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":2}},{"name":"cid","generated":{"line":29,"column":6},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":6}},{"generated":{"line":29,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":9}},{"name":"version","generated":{"line":29,"column":10},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":10}},{"generated":{"line":29,"column":17},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":6}},{"generated":{"line":29,"column":22},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":22}},{"generated":{"line":29,"column":23},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":6}},{"name":"options","generated":{"line":29,"column":27},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":27}},{"generated":{"line":29,"column":34},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":34}},{"name":"base","generated":{"line":29,"column":35},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":35}},{"generated":{"line":29,"column":39},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":6}},{"name":"options","generated":{"line":29,"column":43},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":43}},{"generated":{"line":29,"column":50},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":50}},{"name":"base","generated":{"line":29,"column":51},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":51}},{"generated":{"line":29,"column":55},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":43}},{"generated":{"line":29,"column":60},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":60}},{"generated":{"line":29,"column":71},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":2}},{"generated":{"line":29,"column":73},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":28,"column":73}},{"generated":{"line":30,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":4}},{"generated":{"line":30,"column":8},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":8}},{"name":"options","generated":{"line":30,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":9}},{"generated":{"line":30,"column":16},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":16}},{"name":"upgrade","generated":{"line":30,"column":17},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":17}},{"generated":{"line":30,"column":24},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":4}},{"generated":{"line":30,"column":26},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":26}},{"name":"cid","generated":{"line":30,"column":33},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":33}},{"generated":{"line":30,"column":36},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":36}},{"name":"toString","generated":{"line":30,"column":37},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":37}},{"generated":{"line":30,"column":45},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":33}},{"generated":{"line":30,"column":47},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":29,"column":26}},{"name":"cid","generated":{"line":31,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":4}},{"name":"cid","generated":{"line":31,"column":4},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":4}},{"generated":{"line":31,"column":7},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":7}},{"name":"cid","generated":{"line":31,"column":10},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":10}},{"generated":{"line":31,"column":13},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":13}},{"name":"toV1","generated":{"line":31,"column":14},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":14}},{"generated":{"line":31,"column":18},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":10}},{"generated":{"line":31,"column":20},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":30,"column":4}},{"generated":{"line":32,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":31,"column":3}},{"generated":{"line":34,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":2}},{"name":"cid","generated":{"line":34,"column":9},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":9}},{"generated":{"line":34,"column":12},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":12}},{"name":"toBaseEncodedString","generated":{"line":34,"column":13},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":13}},{"generated":{"line":34,"column":32},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":9}},{"name":"options","generated":{"line":34,"column":33},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":33}},{"generated":{"line":34,"column":40},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":40}},{"name":"base","generated":{"line":34,"column":41},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":41}},{"generated":{"line":34,"column":45},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":9}},{"generated":{"line":34,"column":46},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":33,"column":2}},{"generated":{"line":35,"column":0},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":34,"column":1}},{"generated":{"line":35,"column":1},"source":"../node_modules/ipfs/src/utils/cid.js","original":{"line":20,"column":0}}],"sources":{"../node_modules/ipfs/src/utils/cid.js":"'use strict'\n\nconst CID = require('cids')\n\n/**\n* Stringify a CID encoded in the requested base, upgrading to v1 if necessary.\n*\n* Setting upgrade to false will disable automatic CID upgrading from v0 to v1\n* which is necessary if the multibase is something other than base58btc. Note\n* that it will also not apply the encoding (since v0 CIDs can only be encoded\n* as base58btc).\n*\n* @param {CID|Buffer|String} cid The CID to encode\n* @param {Object} [options] Optional options\n* @param {String} [options.base] Name of multibase codec to encode the CID with\n* @param {Boolean} [options.upgrade] Automatically upgrade v0 CIDs to v1 when\n* necessary. Default: true.\n* @returns {String}\n*/\nexports.cidToString = (cid, options) => {\n  options = options || {}\n  options.upgrade = options.upgrade !== false\n\n  if (!CID.isCID(cid)) {\n    cid = new CID(cid)\n  }\n\n  if (cid.version === 0 && options.base && options.base !== 'base58btc') {\n    if (!options.upgrade) return cid.toString()\n    cid = cid.toV1()\n  }\n\n  return cid.toBaseEncodedString(options.base)\n}\n"},"lineCount":null}},"error":null,"hash":"5b629dc6824d0090e506bbf92a01a262","cacheData":{"env":{}}}